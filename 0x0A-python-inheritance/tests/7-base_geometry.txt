Test for 7-base_geometry.py
--------------------------------------

case 0: Import the class

>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

-------------------------------------------------------------

case 1: name as string and value as int > 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>>
>>> bg.integer_validator("width", 89)
>>>

----------------------------------------------

case 2: name as string and value as int < 0

>>> bg.integer_validator("my_int", -4)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0

-----------------------------------------------

case 3: name as string and value as int = 0

>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
...
ValueError: name must be greater than 0

------------------------------------------------

case 4: name as string and value as string

>>> bg.integer_validator("name", "my_list")
Traceback (most recent call last):
...
TypeError: name must be an integer

-------------------------------------------------

case 5: name as string and value as bool

>>> bg.integer_validator("name", True)
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("name", False)
Traceback (most recent call last):
...
TypeError: name must be an integer

---------------------------------------------------

case 6: passing one argument to integer_validator

>>> bg = BaseGeometry()
>>> bg.integer_validator("name")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

-------------------------------------------------------------------------------

case 7: passing no argument to integer_validator

>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

--------------------------------------------------------------------------------

case 8: passing three arguments to integer_validator

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 5, 6)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

-------------------------------------------------------------------------------

case 9: Passing list to method

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

----------------------------------------------------------------

case 10: Passing dict to method

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

-----------------------------------------------------------------

case 11: Passing None to method

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer

------------------------------------------------------------------

case 12: passing tuple to method

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

-------------------------------------------------------------------

case 13: passing one argument to area method
>>> bg = BaseGeometry()
>>> bg.area(5)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

---------------------------------------------------------------------

casse 14: passing two arguments to area method

>>> bg = BaseGeometry()
>>> bg.area(5, 5)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 3 were given

-----------------------------------------------------------------------

case 15: trying to print the area

>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

-----------------------------------------------------------------------
